{"version":3,"sources":["logo.svg","Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["client","W3CWebSocket","MapObject","city","aqi","updatedAt","Date","now","Dashboard","useState","airQtyRec","setAirQtyRec","useEffect","onmessage","event","res","JSON","parse","data","item","length","getColorCode","inputData","colorCode","className","Object","keys","map","index","style","color","background","toFixed","moment","fromNow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,I,iDCITA,EAAS,IAAIC,eAAa,gCAC5BC,EAAY,CAAE,IAAO,CAAEC,KAAM,MAAOC,IAAK,OAAQC,UAAWC,KAAKC,QA2EtDC,EA1EG,WAEd,MAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEAC,qBAAU,WACNZ,EAAOa,UAAY,SAAUC,GACzB,IADgC,EAC1BC,EAAMC,KAAKC,MAAMH,EAAMI,MADG,cAEfH,GAFe,IAEhC,2BAAsB,CAAC,IAAdI,EAAa,QACdjB,EAAUiB,EAAKhB,OAASD,EAAUiB,EAAKhB,MAAMC,MAAQe,EAAKf,KAC1DF,EAAUiB,EAAKhB,MAAMC,IAAMe,EAAKf,IAChCF,EAAUiB,EAAKhB,MAAME,UAAYC,KAAKC,OAC9BL,EAAUiB,EAAKhB,MAKvBD,EAAUiB,EAAKhB,MAAMC,IAAMe,EAAKf,KAJhCF,EAAUiB,EAAKhB,MAAQgB,EACvBjB,EAAUiB,EAAKhB,MAAME,UAAYC,KAAKC,QARd,8BAchCI,EAAaG,EAAMI,KAAKE,WAI7B,CAACV,IAIJ,IAAMW,EAAe,SAACC,GAClB,IAAIC,EAAY,GAkBhB,OAjBID,EAAY,GAAKA,EAAY,GAC7BC,EAAY,UACLD,GAAa,IAAMA,EAAY,IACtCC,EAAY,UAEPD,GAAa,KAAOA,EAAY,IACrCC,EAAY,UAEPD,GAAa,KAAOA,EAAY,IACrCC,EAAY,UAEPD,GAAa,KAAOA,EAAY,IACrCC,EAAY,UAEPD,GAAa,KAAOA,EAAY,MACrCC,EAAY,WAETA,GAGX,OAAQ,mCAGJ,qBAAKC,UAAU,YAAf,SACI,kCACI,gCACI,+BACI,sCACA,6CACA,mDAGR,gCAEQC,OAAOC,KAAKxB,GAAWyB,KAAI,SAACT,EAAMU,GAC9B,OAAQ,+BAAuB,6BAAK1B,EAAUgB,GAAMf,OAAU,oBAAI0B,MAAO,CAAEC,MAAO,OAAQC,WAAYV,EAAanB,EAAUgB,GAAMd,IAAI4B,QAAQ,KAAjF,SAAyF9B,EAAUgB,GAAMd,IAAI4B,QAAQ,KAAQ,6BAAKC,IAAO/B,EAAUgB,GAAMb,WAAW6B,cAAjNhB,EAAOU,gBCxDrCO,MAVf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCIOY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d7e3b324.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useEffect, useState } from \"react\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport moment from \"moment\";\r\n\r\nconst client = new W3CWebSocket('wss://city-ws.herokuapp.com/');\r\nlet MapObject = { \"Goa\": { city: \"Goa\", aqi: 238.31, updatedAt: Date.now() } };\r\nconst Dashboard = () => {\r\n\r\n    const [airQtyRec, setAirQtyRec] = useState(null);\r\n\r\n    useEffect(() => {\r\n        client.onmessage = function (event) {\r\n            const res = JSON.parse(event.data);\r\n            for (let item of res) {\r\n                if (MapObject[item.city] && MapObject[item.city].aqi !== item.aqi) {\r\n                    MapObject[item.city].aqi = item.aqi;\r\n                    MapObject[item.city].updatedAt = Date.now();\r\n                } else if (!MapObject[item.city]) {\r\n                    MapObject[item.city] = item;\r\n                    MapObject[item.city].updatedAt = Date.now();\r\n                }\r\n                else {\r\n                    MapObject[item.city].aqi = item.aqi;\r\n                }\r\n            }\r\n            setAirQtyRec(event.data.length);\r\n           \r\n        };\r\n\r\n    }, [airQtyRec])\r\n\r\n \r\n\r\n    const getColorCode = (inputData) => {\r\n        let colorCode = \"\";\r\n        if (inputData > 0 && inputData < 51) {//Good\r\n            colorCode = \"#55a84f\";\r\n        } else if (inputData >= 51 && inputData < 101) {//Satisfactory\r\n            colorCode = \"#a3c853\";\r\n        }\r\n        else if (inputData >= 101 && inputData < 201) { // moderate\r\n            colorCode = \"#fff833\";\r\n        }\r\n        else if (inputData >= 201 && inputData < 301) { //Poor\r\n            colorCode = \"#f29c33\";\r\n        }\r\n        else if (inputData >= 301 && inputData < 401) { //Very poor\r\n            colorCode = \"#e93f33\";\r\n        }\r\n        else if (inputData >= 401 && inputData < 500) { //severe\r\n            colorCode = \"#af2d24\";\r\n        }\r\n        return colorCode;\r\n    }\r\n\r\n    return (<>\r\n\r\n      \r\n        <div className=\"container\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>City</th>\r\n                        <th>Current AQI</th>\r\n                        <th>Last Updated</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        Object.keys(MapObject).map((data, index) => {\r\n                            return (<tr key={data + index}><td>{MapObject[data].city}</td><td style={{ color: \"#000\", background: getColorCode(MapObject[data].aqi.toFixed(2)) }}>{MapObject[data].aqi.toFixed(2)}</td><td>{moment(MapObject[data].updatedAt).fromNow()}</td></tr>)\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default Dashboard;","import logo from './logo.svg';\nimport './App.css';\nimport Dashboard from \"./Dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Dashboard />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}